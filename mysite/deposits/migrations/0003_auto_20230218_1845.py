# Generated by Django 4.1.7 on 2023-02-18 18:45

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("deposits", "0002_alter_depositproducts_duration_and_more"),
    ]

    operations = [
        migrations.RunSQL(
            "CREATE TRIGGER check_amount_range "
            "BEFORE INSERT ON deposits_deposits "
            "FOR EACH ROW "
            "BEGIN "
            "DECLARE min_amount DECIMAL(10,2); "
            "DECLARE max_amount DECIMAL(10,2); "
            "SELECT min_amount, max_amount INTO min_amount, max_amount "
            "FROM deposits_depositproducts WHERE id = NEW.deposit_product_id_id; "
            "IF (NEW.amount < min_amount "
            "OR NEW.amount > max_amount) THEN "
            "SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Amount is outside allowed range'; "
            "END IF; "
            "END",
            "DROP TRIGGER IF EXISTS check_amount_range",
        )
    ]
    # operations = [
    #     migrations.RunSQL(
    #         "CREATE TRIGGER set_amount BEFORE INSERT ON deposits_deposits FOR EACH ROW SET NEW.amount = 666",
    #         "DROP TRIGGER IF EXISTS set_ends_at",
    #     )
    # ]
    # operations = [
    #     migrations.RunSQL(
    #         "DELIMITER $$;"
    #         "CREATE TRIGGER check_amount_range"
    #         "BEFORE INSERT ON deposits_deposits"
    #         "FOR EACH ROW"
    #         "BEGIN"
    #         "IF (NEW.amount < (SELECT min_amount FROM deposits_depositproducts WHERE id = NEW.deposit_product_id_id)"
    #         "OR NEW.amount > (SELECT max_amount FROM deposits_depositproducts WHERE id = NEW.deposit_product_id_id))"
    #         "THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Amount is outside allowed range';"
    #         "END IF"
    #         "END $$"
    #         "DELIMITER ;",
    #         "DROP TRIGGER IF EXISTS check_amount_range",
    #     )
    # ]
